{"version":3,"sources":["config.js","components/Header.jsx","components/AllExercises.jsx","components/CreateExercise.jsx","components/DeleteExercise.jsx","components/ExerciseLeaderboard.jsx","components/SearchExerciseName.jsx","components/UpdateExercise.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["config","resourceServer","window","location","origin","localServer","Header","react_default","a","createElement","react_router_dom","to","AllExercise","_useState","useState","_useState2","Object","slicedToArray","exercises","setExercises","useEffect","fetch","concat","then","response","json","data","console","log","components_Header","map","exercise","key","exerciseID","exerciseName","exerciseBodyPart","exerciseEquipment","exerciseGIFURL","CreateExercise","setExerciseName","_useState3","_useState4","setExerciseBodyPart","_useState5","_useState6","setExerciseEquipment","_useState7","_useState8","setExerciseGIFURL","onSubmit","event","preventDefault","method","headers","Content-Type","body","JSON","stringify","ok","alert","type","value","onChange","e","target","DeleteExercise","setExerciseID","ExerciseLeaderboard","mostActiveUsers","setMostActiveUsers","highestPRs","setHighestPRs","user","userFirstName","userLastName","NumberOfGymSessions","pr","SearchExercise","encodeURIComponent","UpdateExercise","_useState9","_useState10","App","react_router","path","exact","component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.2d35fea8.chunk.js","sourcesContent":["export default {\n  resourceServer: window.location.origin + \"/api\",\n  localServer: \"http://localhost:5000/api\",\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header() {\n\n  return (\n    <header>\n        <nav>\n            <ul>\n                <li><Link to=\"/\">Leaderboard</Link></li>\n                <li><Link to=\"/all\">AllExercises</Link></li>\n                <li><Link to=\"/create\">CreateExercise</Link></li>\n                <li><Link to=\"/delete\">DeleteExercise</Link></li>\n                <li><Link to=\"/udpate\">UpdateExercise</Link></li>\n                <li><Link to=\"/search\">SearchExercise</Link></li>\n            </ul>\n        </nav>\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport config from \"../config\";\nimport Header from \"./Header\";\n\nfunction AllExercise() {\n  const [exercises, setExercises] = useState([]);\n  \n  /**\n  * Calls API's required to display information on page\n  */\n useEffect(() => {\n   fetch(`${config.resourceServer}/exercises`)\n     .then((response) => response.json())\n     .then((data) => {\n      console.log(data.data)\n      setExercises(data.data);\n     });\n }, []);\n\n  return (\n    <div>\n      <Header />\n      <h1>All Exercises</h1>\n      <table>\n        <tr>\n          <th>exerciseID</th>\n          <th>exerciseName</th>\n          <th>exerciseBodyPart</th>\n          <th>exerciseEquipment</th>\n          <th>exerciseGIFURL</th>\n        </tr>\n        {exercises.map((exercise) => (\n          <tr key={exercise.exerciseID}>\n            <td>{exercise.exerciseID}</td>\n            <td>{exercise.exerciseName}</td>\n            <td>{exercise.exerciseBodyPart}</td>\n            <td>{exercise.exerciseEquipment}</td>\n            <td>{exercise.exerciseGIFURL}</td>\n          </tr>\n        ))}\n    </table>\n    </div>\n  );\n}\n\nexport default AllExercise;\n","import React, { useState } from \"react\";\nimport config from \"../config\";\nimport Header from \"./Header\";\n\nfunction CreateExercise() {\n  const [exerciseName, setExerciseName] = useState(\"\");\n  const [exerciseBodyPart, setExerciseBodyPart] = useState(\"\");\n  const [exerciseEquipment, setExerciseEquipment] = useState(\"\");\n  const [exerciseGIFURL, setExerciseGIFURL] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    fetch(`${config.resourceServer}/exercises`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        exerciseName: exerciseName,\n        exerciseBodyPart: exerciseBodyPart,\n        exerciseEquipment: exerciseEquipment,\n        exerciseGIFURL: exerciseGIFURL\n      }),\n    }).then((response) => {\n      response.json().then((data) => {\n        if (response.ok) {\n          alert(`Successfully Created Exercise`)\n        } else {\n          alert(`Failed At Creating Exercise`)\n        }\n      });\n    });\n  }\n\n  return (\n    <div>\n      <Header />\n      <h1>Create Exercise</h1>\n      <form onSubmit={handleSubmit}>\n        <label>Enter exerciseName:\n          <input \n            type=\"text\" \n            value={exerciseName}\n            onChange={(e) => setExerciseName(e.target.value)}\n          />\n        </label>\n        <br />\n        <label>Enter exerciseBodyPart:\n          <input \n            type=\"text\" \n            value={exerciseBodyPart}\n            onChange={(e) => setExerciseBodyPart(e.target.value)}\n          />\n        </label>\n        <br />\n        <label>Enter exerciseEquipment:\n          <input \n            type=\"text\" \n            value={exerciseEquipment}\n            onChange={(e) => setExerciseEquipment(e.target.value)}\n          />\n        </label>\n        <br />\n        <label>Enter exerciseBodyPart:\n          <input \n            type=\"text\" \n            value={exerciseGIFURL}\n            onChange={(e) => setExerciseGIFURL(e.target.value)}\n          />\n        </label>\n        <br />\n        <input type=\"submit\" />\n      </form>\n    </div>\n  );\n}\n\nexport default CreateExercise;\n","import React, { useState } from \"react\";\nimport config from \"../config\";\nimport Header from \"./Header\";\n\nfunction DeleteExercise() {\n  const [exerciseID, setExerciseID] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    fetch(`${config.resourceServer}/exercises/${exerciseID}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((response) => {\n      response.json().then((data) => {\n        if (response.ok) {\n          alert(`Successfully Deleted Exercise`)\n        } else {\n          alert(\n            `Failed At Deleting Exercise:\n            ${data}`\n            )\n        }\n      });\n    });\n  }\n\n  return (\n    <div>\n      <Header />\n      <h1>Delete Exercise</h1>\n      <form onSubmit={handleSubmit}>\n        <label>Enter exerciseID:\n          <input \n            type=\"text\" \n            value={exerciseID}\n            onChange={(e) => setExerciseID(e.target.value)}\n          />\n        </label>\n        <br />\n        <input type=\"submit\" />\n      </form>\n    </div>\n  );\n}\n\nexport default DeleteExercise;\n","import React, { useEffect, useState } from \"react\";\nimport config from \"../config\";\nimport Header from \"./Header\";\n\nfunction ExerciseLeaderboard() {\n  const [mostActiveUsers, setMostActiveUsers] = useState([]);\n  const [highestPRs, setHighestPRs] = useState([]);\n  \n  \n  useEffect(() => {\n    fetch(`${config.resourceServer}/exercises/highestPRs`)\n      .then((response) => response.json())\n      .then((data) => {\n      setHighestPRs(data.data);\n      });\n    fetch(`${config.resourceServer}/user/mostActive`)\n      .then((response) => response.json())\n      .then((data) => {\n      setMostActiveUsers(data.data);\n      });\n  }, []);\n\n  return (\n    <div>\n      <Header />\n      <h1>Leaderboard Exercise</h1>\n      <div>\n        <h3>Most Active Users</h3>\n        <table>\n          <tr>\n            <th>userFirstName</th>\n            <th>userLastName</th>\n            <th>NumberOfGymSessions</th>\n          </tr>\n          {mostActiveUsers.map((user) => (\n            <tr>\n              <td>{user.userFirstName}</td>\n              <td>{user.userLastName}</td>\n              <td>{user.NumberOfGymSessions}</td>\n            </tr>\n          ))}\n        </table>\n      </div>\n      <div>\n        <h3>Highest PRs of Each Exercise</h3>\n        <table>\n          <tr>\n            <th>exerciseName</th>\n            <th>MAX(prWeight)</th>\n          </tr>\n          {highestPRs.map((pr) => (\n            <tr key={pr.exerciseName}>\n              <td>{pr.exerciseName}</td>\n              <td>{pr[\"MAX(prWeight)\"]}</td>\n            </tr>\n          ))}\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default ExerciseLeaderboard;\n","import React, { useState } from \"react\";\nimport config from \"../config\";\nimport Header from \"./Header\";\n\nfunction SearchExercise() {\n  const [exerciseBodyPart, setExerciseBodyPart] = useState(\"\");\n  const [exercises, setExercises] = useState([]);\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    fetch(`${config.resourceServer}/exercises/searchByBodyPart/${encodeURIComponent(exerciseBodyPart)}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setExercises(data.data);\n      });\n  }\n\n  return (\n    <div>\n      <Header />\n      <h1>Search Exercises</h1>\n      <form onSubmit={handleSubmit}>\n        <label>Enter exerciseBodyPart:\n          <input \n            type=\"text\" \n            value={exerciseBodyPart}\n            onChange={(e) => setExerciseBodyPart(e.target.value)}\n          />\n        </label>\n        <br />\n        <input type=\"submit\" />\n        <br />\n      </form>\n      <table>\n        <tr>\n          <th>exerciseID</th>\n          <th>exerciseName</th>\n          <th>exerciseBodyPart</th>\n          <th>exerciseEquipment</th>\n          <th>exerciseGIFURL</th>\n        </tr>\n        {exercises.map((exercise) => (\n          <tr key={exercise.exerciseID}>\n            <td>{exercise.exerciseID}</td>\n            <td>{exercise.exerciseName}</td>\n            <td>{exercise.exerciseBodyPart}</td>\n            <td>{exercise.exerciseEquipment}</td>\n            <td>{exercise.exerciseGIFURL}</td>\n          </tr>\n        ))}\n    </table>\n    </div>\n  );\n}\n\nexport default SearchExercise;\n","import React, { useState } from \"react\";\nimport config from \"../config\";\nimport Header from \"./Header\";\n\nfunction UpdateExercise() {\n  const [exerciseID, setExerciseID] = useState(\"\")\n  const [exerciseName, setExerciseName] = useState(\"\");\n  const [exerciseBodyPart, setExerciseBodyPart] = useState(\"\");\n  const [exerciseEquipment, setExerciseEquipment] = useState(\"\");\n  const [exerciseGIFURL, setExerciseGIFURL] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    fetch(`${config.resourceServer}/exercises/${exerciseID}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        exerciseName: exerciseName,\n        exerciseBodyPart: exerciseBodyPart,\n        exerciseEquipment: exerciseEquipment,\n        exerciseGIFURL: exerciseGIFURL\n      }),\n    }).then((response) => {\n      response.json().then((data) => {\n        if (response.ok) {\n          alert(`Successfully Updated Exercise`)\n        } else {\n          alert(`Failed At Updated Exercise`)\n        }\n      });\n    });\n  }\n\n  return (\n    <div>\n      <Header />\n      <h1>Create Exercise</h1>\n      <form onSubmit={handleSubmit}>\n        <label>Enter exerciseID:\n          <input \n            type=\"text\" \n            value={exerciseID}\n            onChange={(e) => setExerciseID(e.target.value)}\n          />\n        </label>\n        <br />\n        <label>Enter exerciseName:\n          <input \n            type=\"text\" \n            value={exerciseName}\n            onChange={(e) => setExerciseName(e.target.value)}\n          />\n        </label>\n        <br />\n        <label>Enter exerciseBodyPart:\n          <input \n            type=\"text\" \n            value={exerciseBodyPart}\n            onChange={(e) => setExerciseBodyPart(e.target.value)}\n          />\n        </label>\n        <br />\n        <label>Enter exerciseEquipment:\n          <input \n            type=\"text\" \n            value={exerciseEquipment}\n            onChange={(e) => setExerciseEquipment(e.target.value)}\n          />\n        </label>\n        <br />\n        <label>Enter exerciseBodyPart:\n          <input \n            type=\"text\" \n            value={exerciseGIFURL}\n            onChange={(e) => setExerciseGIFURL(e.target.value)}\n          />\n        </label>\n        <br />\n        <input type=\"submit\" />\n      </form>\n    </div>\n  );\n}\n\nexport default UpdateExercise;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport AllExercise from \"./components/AllExercises\";\nimport CreateExercise from \"./components/CreateExercise\";\nimport DeleteExercise from \"./components/DeleteExercise\";\nimport ExerciseLeaderboard from \"./components/ExerciseLeaderboard\";\nimport SearchExercise from \"./components/SearchExerciseName\";\nimport UpdateExercise from \"./components/UpdateExercise\";\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={ExerciseLeaderboard} />\n      <Route path=\"/all\" exact component={AllExercise} />\n      <Route path=\"/delete\" exact component={DeleteExercise} />\n      <Route path=\"/create\" exact component={CreateExercise} />\n      <Route path=\"/udpate\" exact component={UpdateExercise} />\n      <Route path=\"/search\" exact component={SearchExercise} />\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}